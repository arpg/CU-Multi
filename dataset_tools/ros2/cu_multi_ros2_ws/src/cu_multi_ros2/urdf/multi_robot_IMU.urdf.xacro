<?xml version="1.0"?>

<robot name="hunter_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- <xacro:property name="robot_namespace" default="robot1"/> -->
  <xacro:arg name="name" default="robotf"/>
  <xacro:property name="robot_namespace" value="$(arg name)"/>

  <!--  Degree-to-radian conversions -->
  <xacro:property name="degrees_45" value="0.785398163"/>
  <xacro:property name="degrees_90" value="1.57079633"/>
  <!-- <xacro:property name="pi" value="3.14159265359"/> -->

  <!--  chassis properties -->
  <xacro:property name="chassis_length" value="0.50"/>
  <xacro:property name="chassis_width" value="0.30"/>
  <xacro:property name="chassis_height" value="0.20"/>
  <xacro:property name="chassis_mass" value="2.788"/>

  <!-- wheel properties -->
  <xacro:property name="hub_dia" value="0.09652"/>
  <xacro:property name="tire_dia" value="0.275"/>
  <xacro:property name="tire_width" value="0.08912"/>
  <xacro:property name="hex_hub_depth" value="0.01445"/>
  <xacro:property name="wheel_mass" value="0.29"/>

  <!-- axel properties -->
  <xacro:property name="wheelbase" value="0.575"/>
  <xacro:property name="hex_hub_dist" value="0.55"/>
  <xacro:property name="axle_length" value="0.03"/>
  <xacro:property name="wheel_travel" value="0.01"/>
  <xacro:property name="shock_z_offset" value="0.28"/>

  <!-- Ouster properties -->
  <xacro:property name="ouster_dia" value="0.087"/>
  <xacro:property name="ouster_height" value="0.0742"/>
  <xacro:property name="ouster_mass" value="0.03"/>

  <xacro:property name="shock_eff_limit" value="200"/>
  <xacro:property name="shock_vel_limit" value="1000"/>

  <xacro:property name="axle_eff_limit" value="5.12766"/>
  <xacro:property name="axle_vel_limit" value="244.8696"/>

  <xacro:property name="servo_stall_torque" value="10"/>
  <xacro:property name="servo_no_load_speed" value="4.553"/>

  <!-- Plate dimensions -->
  <xacro:property name="mp_width" value="0.1524"/>
  <xacro:property name="mp_length" value="0.1524"/>
  <xacro:property name="mp_height" value="0.015"/>

  <xacro:property name="ouster_riser_width" value="0.08255"/>
  <xacro:property name="ouster_riser_length" value="0.08255"/>
  <xacro:property name="ouster_riser_height" value="0.02"/>

  <material name="chassis_mat">
    <color rgba="0.5 0.5 0.5 1"/>
  </material>
  <material name="tire_mat">
    <color rgba="0 0 0 1"/>
  </material>

  <!-- ***************************************************************************************** -->
  <!--                                  hunter elements                                          -->
  <!-- ***************************************************************************************** -->
  <!-- Null inertial element. This is needed to make the model work with Gazebo. -->
  <xacro:macro name="null_inertial">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </xacro:macro>

  <!-- Inertia of a solid cuboid. Width is measured along the x axis, depth along the y axis, and height along the z axis. -->
  <xacro:macro name="solid_cuboid_inertial" params="width depth height mass *origin">
    <inertial>
      <xacro:insert_block name="origin"/>
      <mass value="${mass}"/>
      <inertia ixx="${mass * (depth * depth + height * height) / 12}"
               ixy="0" ixz="0"
               iyy="${mass * (width * width + height * height) / 12}"
               iyz="0"
               izz="${mass * (width * width + depth * depth) / 12}"/>
    </inertial>
  </xacro:macro>

  <!-- Inertia of a thick-walled cylindrical tube with open ends. Height is
       measured along the z axis, which is the tube's axis. inner_rad and
       outer_rad are the tube's inner and outer radii, respectively. -->
  <xacro:macro name="thick_walled_tube_inertial" params="inner_rad outer_rad height mass">
    <inertial>
      <mass value="${mass}"/>
      <inertia ixx="${(1 / 12) * mass * (3 * (inner_rad * inner_rad +
                    outer_rad * outer_rad) + height * height)}"
               ixy="0" ixz="0"
               iyy="${(1 / 12) * mass * (3 * (inner_rad * inner_rad +
                    outer_rad * outer_rad) + height * height)}"
               iyz="0"
               izz="${mass * (inner_rad * inner_rad +
                    outer_rad * outer_rad) / 2}"/>
    </inertial>
  </xacro:macro>

  <!-- Shock absorber -->
  <xacro:macro name="shock" params="lr_prefix fr_prefix lr_reflect fr_reflect child">
    <joint name="${robot_namespace}_${lr_prefix}_${fr_prefix}_shock" type="fixed">
      <parent link="${robot_namespace}_chassis"/>
      <child link="${robot_namespace}_${child}"/>

      <origin xyz="${fr_reflect * wheelbase / 2} 
                   ${lr_reflect * ((hex_hub_dist / 2) - axle_length)}
                   ${(wheel_travel / 2) - shock_z_offset}"/>
    </joint>
  </xacro:macro>

  <!-- The "wheel" macro defines an axle carrier, axle, and wheel. -->
  <xacro:macro name="wheel" params="lr_prefix fr_prefix lr_reflect">
    <link name="${robot_namespace}_${lr_prefix}_${fr_prefix}_axle_carrier">
      <xacro:null_inertial/>
    </link>

    <!-- The left and right axles have the same axis so that identical rotation values cause the wheels to rotate in the same direction. -->
    <joint name="${robot_namespace}_${lr_prefix}_${fr_prefix}_axle" type="fixed">
      <parent link="${robot_namespace}_${lr_prefix}_${fr_prefix}_axle_carrier"/>
      <child link="${robot_namespace}_${lr_prefix}_${fr_prefix}_wheel"/>
      <origin rpy="${degrees_90} 0 0"/>
    </joint>

    <link name="${robot_namespace}_${lr_prefix}_${fr_prefix}_wheel">
      <visual>
        <origin xyz="0 ${lr_reflect*(axle_length-(tire_width/2-hex_hub_depth))} 0" rpy="${degrees_90 + lr_reflect*degrees_90} 0 0"/>
        <geometry>
		      <mesh filename="package://cu_multi_ros/urdf/meshes/dae/hunter_wheel.dae"  scale="-0.001 0.001 0.001"/>
        </geometry>
        <material name="tire_mat"/>
      </visual>

      <collision>
        <origin xyz="0 ${lr_reflect*(axle_length-(tire_width/2-hex_hub_depth))} 0"/>
        <geometry>
          <cylinder radius="${tire_dia/2}" length="${tire_width}"/>
        </geometry>
      </collision>

      <!-- Inertial properties -->
      <xacro:thick_walled_tube_inertial inner_rad="${hub_dia/2}" outer_rad="${tire_dia/2}" height="${tire_width}" mass="${wheel_mass}"/>
    </link>
  </xacro:macro>

  <!-- Front wheel -->
  <xacro:macro name="front_wheel" params="lr_prefix fr_prefix lr_reflect fr_reflect">
    <xacro:shock lr_prefix="${lr_prefix}" fr_prefix="${fr_prefix}" lr_reflect="${lr_reflect}" 
                 fr_reflect="${fr_reflect}" child="${lr_prefix}_steering_link"/>

    <link name="${robot_namespace}_${lr_prefix}_steering_link">
      <xacro:null_inertial/>
    </link>

    <joint name="${robot_namespace}_${lr_prefix}_steering_joint" type="fixed">
      <parent link="${robot_namespace}_${lr_prefix}_steering_link"/>
      <child link="${robot_namespace}_${lr_prefix}_${fr_prefix}_axle_carrier"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>

    <xacro:wheel lr_prefix="${lr_prefix}" fr_prefix="${fr_prefix}" lr_reflect="${lr_reflect}"/>
  </xacro:macro>

  <!-- Rear wheel -->
  <xacro:macro name="rear_wheel" params="lr_prefix fr_prefix lr_reflect fr_reflect">
    <xacro:shock lr_prefix="${lr_prefix}" fr_prefix="${fr_prefix}"
                 lr_reflect="${lr_reflect}" fr_reflect="${fr_reflect}"
                 child="${lr_prefix}_${fr_prefix}_axle_carrier"/>
    <xacro:wheel lr_prefix="${lr_prefix}" fr_prefix="${fr_prefix}" lr_reflect="${lr_reflect}"/>
  </xacro:macro>

  <!-- ***************************************************************************************** -->
  <!--                                         LINKS                                             -->
  <!-- ***************************************************************************************** -->

  <!-- LORD IMU sensor (ROOT LINK) -->
  <link name="${robot_namespace}_imu_link">
    <visual>
      <origin xyz="0.0222 0.024465 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.06858 0.07595 0.01331"/>
      </geometry>
      <material name="chassis_mat"/>
    </visual>

    <collision>
      <origin xyz="0.0222 0.024465 0"/>
      <geometry>
        <box size="0.16858 0.07595 0.01331"/>
      </geometry>
    </collision>
  </link>

  <!-- Ouster lidar sensor -->
  <link name="${robot_namespace}_os_sensor">
    <visual>
        <origin xyz="-0.045 0.04 ${-ouster_height/2}" rpy="${degrees_90} 0 ${degrees_90}"/>
        <geometry>
          <mesh filename="package://cu_multi_ros/urdf/meshes/dae/os_sensor.dae"  scale="-0.001 0.001 0.001"/>
        </geometry>
        <material name="chassis_mat"/>
      </visual>

      <collision>
        <origin xyz="0.04 0.04 ${-ouster_height/2}" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="${ouster_dia/2}" length="${ouster_height}"/>
        </geometry>
      </collision>
  </link>

  <joint name="${robot_namespace}_imu_to_ouster" type="fixed">
    <parent link="${robot_namespace}_imu_link"/>
    <child link="${robot_namespace}_os_sensor"/>
    <origin xyz="-0.06286 0.01557 0.053345" rpy="0 0 ${2*degrees_90}"/>
  </joint>

  <!-- Wheels -->
  <xacro:front_wheel lr_prefix="left" fr_prefix="front"
                     lr_reflect="1" fr_reflect="1"/>
  <xacro:front_wheel lr_prefix="right" fr_prefix="front"
                     lr_reflect="-1" fr_reflect="1"/>
  <xacro:rear_wheel lr_prefix="left" fr_prefix="rear"
                    lr_reflect="1" fr_reflect="-1"/>
  <xacro:rear_wheel lr_prefix="right" fr_prefix="rear"
                    lr_reflect="-1" fr_reflect="-1"/>
</robot>
